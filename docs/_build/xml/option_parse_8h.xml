<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="option_parse_8h" kind="file" language="C++">
    <compoundname>optionParse.h</compoundname>
    <includes local="no">iostream</includes>
    <includes local="yes">getopt.h</includes>
    <includedby refid="_cuts_8_c" local="yes">/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/Cuts.C</includedby>
    <includedby refid="df__set_8_c" local="yes">/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C</includedby>
    <includedby refid="main_8_c" local="yes">/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/main/main.C</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h</label>
        <link refid="option_parse_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>getopt.h</label>
      </node>
      <node id="2">
        <label>iostream</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h</label>
        <link refid="option_parse_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/Cuts.C</label>
        <link refid="_cuts_8_c"/>
      </node>
      <node id="3">
        <label>/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C</label>
        <link refid="df__set_8_c"/>
      </node>
      <node id="4">
        <label>/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/main/main.C</label>
        <link refid="main_8_c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="option_parse_8h_1ae964ff8411b4fdcaf65cb5529aea4bef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void PrintHelp</definition>
        <argsstring>()</argsstring>
        <name>PrintHelp</name>
        <briefdescription>
<para>Print help stream for understanding what options and flags are available. </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="option_parse_8_c_1ae964ff8411b4fdcaf65cb5529aea4bef" kindref="member">PrintHelp()</ref> </para>
<para>It prints the following output:</para>
<para><ndash/>cutDepth [-d] &lt;n&gt;: Choose Cut Depth between the options: 0 (default): select events with two muons of opposite charge and invariant mass around Y-State 1: select dimuon pT between 10 and 100 GeV 2: select dimuon pT between 10 and 100 GeV and a rapidity less than 0.6 in abs value <ndash/>fitFunction [-f] &lt;PDFName&gt;: Choose PDF to use as Fit Function between three options: gaus: Gaussian PDF bw: Breit - Wigner PDF stud: t-Student PDF <ndash/>nameFig [-n] &lt;figName&gt; name of file in which the figure of the fit is going to be saved <ndash/>ptmin [-p] &lt;val&gt;: Set minimum cut on pt (GeV) <ndash/>ptMax [-P] &lt;val&gt;: Set maximum cut on pt (GeV) <ndash/>ymin [-y] &lt;val&gt;: Set minimum cut on rapidity <ndash/>yMax [-Y] &lt;val&gt;: Set maximum cut on rapidity <ndash/>help [-h]: Show help <ndash/>verbose [-v]: Verbose Fit, shows minimisation steps.</para>
<para><ref refid="option_parse_8_c_1ae964ff8411b4fdcaf65cb5529aea4bef" kindref="member">PrintHelp()</ref> </para>
<para>It prints the following output:</para>
<para><ndash/>cutDepth [-d] &lt;n&gt;: Choose Cut Depth between the options: 0 (default): select events with two muons of opposite charge and invariant mass around Y-State 1: select dimuon pT between 10 and 100 GeV 2: select dimuon pT between 10 and 100 GeV and a rapidity less than 0.6 in abs value <ndash/>fitFunction [-f] &lt;PDFName&gt;: Choose PDF to use as Fit Function between three options: gaus: Gaussian PDF bw: Breit - Wigner PDF stud: t-Student PDF <ndash/>nameFig [-n] &lt;figName&gt; name of file in which the figure of the fit is going to be saved <ndash/>ptmin [-p] &lt;val&gt;: Set minimum cut on pt (GeV) <ndash/>ptMax [-P] &lt;val&gt;: Set maximum cut on pt (GeV) <ndash/>ymin [-y] &lt;val&gt;: Set minimum cut on rapidity <ndash/>yMax [-Y] &lt;val&gt;: Set maximum cut on rapidity <ndash/>help [-h]: Show help <ndash/>verbose [-v]: Verbose Fit, shows minimisation steps. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" line="53" column="6" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/optionParse.C" bodystart="52" bodyend="71" declfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" declline="53" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="option_parse_8h_1a9c0e386a8b56ce160fedfc90034b93af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void outOfRangeErrorHandling</definition>
        <argsstring>(std::string opt, std::string range, const char *insrtvl)</argsstring>
        <name>outOfRangeErrorHandling</name>
        <param>
          <type>std::string</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>range</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>insrtvl</declname>
        </param>
        <briefdescription>
<para>it handles an exception of type &quot;Out of Range&quot;; </para>
        </briefdescription>
        <detaileddescription>
<para>outOfRangeErrorHandling <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para>option in case (e.g. depth, fitFunction, etc...) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>range accepted of the desired option (e.g. 0,1,2 for depth) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>insrtvl</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid value entered by the user in the command line stream</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error exit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" line="65" column="6" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/optionParse.C" bodystart="83" bodyend="89" declfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="option_parse_8h_1aaaac65a9c94bb3634948df7d2d9e1164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void conversionErrorHandling</definition>
        <argsstring>(std::string opt, std::string range, std::invalid_argument err)</argsstring>
        <name>conversionErrorHandling</name>
        <param>
          <type>std::string</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>range</declname>
        </param>
        <param>
          <type>std::invalid_argument</type>
          <declname>err</declname>
        </param>
        <briefdescription>
<para>it handles an exception of type &quot;conversion Error&quot;; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="option_parse_8h_1aaaac65a9c94bb3634948df7d2d9e1164" kindref="member">conversionErrorHandling()</ref> <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>opt</parametername>
</parameternamelist>
<parameterdescription>
<para>option in case (e.g. depth, fitFunction, etc...) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>range</parametername>
</parameternamelist>
<parameterdescription>
<para>range accepted of the desired option (e.g. 0,1,2 for depth) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>err</parametername>
</parameternamelist>
<parameterdescription>
<para>invalid argument raised by the standard library</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>error exit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" line="77" column="6" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/optionParse.C" bodystart="101" bodyend="106" declfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" declline="77" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="option_parse_8h_1acd083c726f0de0e35447b9d4176abc76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void unknownErrorHandling</definition>
        <argsstring>()</argsstring>
        <name>unknownErrorHandling</name>
        <briefdescription>
<para>it handles an exception of type &quot;unknown&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><ref refid="option_parse_8_c_1acd083c726f0de0e35447b9d4176abc76" kindref="member">unknownErrorHandling()</ref> </para>
<para><simplesect kind="return"><para>error exit</para>
</simplesect>
<ref refid="option_parse_8_c_1acd083c726f0de0e35447b9d4176abc76" kindref="member">unknownErrorHandling()</ref> </para>
<para><simplesect kind="return"><para>error exit </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" line="86" column="6" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/optionParse.C" bodystart="115" bodyend="119" declfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" declline="86" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="option_parse_8h_1aca42904c9676201145e82289b4b97f47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ProcessArgs</definition>
        <argsstring>(int argc, char **argv, int &amp;dr, int &amp;fr, float &amp;pmr, float &amp;pMr, float &amp;ymr, float &amp;yMr, std::string &amp;nfr, int &amp;vr)</argsstring>
        <name>ProcessArgs</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>dr</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>fr</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>pmr</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>pMr</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>ymr</declname>
        </param>
        <param>
          <type>float &amp;</type>
          <declname>yMr</declname>
        </param>
        <param>
          <type>std::string &amp;</type>
          <declname>nfr</declname>
        </param>
        <param>
          <type>int &amp;</type>
          <declname>vr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Implementation of the option arguments with the library &lt;getopt&gt; <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>command line arguments number </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>array of command line arguments passed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference of depth defined in main </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference of fitFunction defined in main </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pmr</parametername>
</parameternamelist>
<parameterdescription>
<para>recerence of ptm (minimum pt) defined in main </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pMr</parametername>
</parameternamelist>
<parameterdescription>
<para>recerence of ptM (maximum pt) defined in main </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ymr</parametername>
</parameternamelist>
<parameterdescription>
<para>recerence of ym (minimum rapidity) defined in main </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yMr</parametername>
</parameternamelist>
<parameterdescription>
<para>recerence of yM (maximum rapidity) defined in main </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nfr</parametername>
</parameternamelist>
<parameterdescription>
<para>recerence of nameFile defined in main </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vr</parametername>
</parameternamelist>
<parameterdescription>
<para>reference of varaible verbose defined in main </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>Define short options and whether an argument is expected</para>
<para>define long options</para>
<para>initialize index to 0</para>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" line="102" column="6" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/optionParse.C" bodystart="134" bodyend="323" declfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h" declline="102" declcolumn="6"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>header file of <ref refid="option_parse_8_c" kindref="compound">optionParse.C</ref> </para>
    </briefdescription>
    <detaileddescription>
<para>In this file are defined the functions used in order to handle flags and command line options. In particular, it is defined:</para>
<para>void <ref refid="option_parse_8h_1ae964ff8411b4fdcaf65cb5529aea4bef" kindref="member">PrintHelp()</ref>: output of the option help. It shows the available options and flags;</para>
<para>void <ref refid="option_parse_8h_1a9c0e386a8b56ce160fedfc90034b93af" kindref="member">outOfRangeErrorHandling(std::string opt, std::string range, const char *insrtvl)</ref>: it handles an exception of type &quot;Out of Range&quot;;</para>
<para>void <ref refid="option_parse_8h_1aaaac65a9c94bb3634948df7d2d9e1164" kindref="member">conversionErrorHandling(std::string opt, std::string range, std::invalid_argument err)</ref>: it handles an exception of type Conversion Error (string to float or string to int);</para>
<para>void unknowErrorHandling(): it handles an error of uknown type;</para>
<para>voi ProcessArgs(...): it handles command line inputs and stores the values of flags or options. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>optionParse_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>optionParse_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;getopt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="option_parse_8h_1ae964ff8411b4fdcaf65cb5529aea4bef" kindref="member">PrintHelp</ref>();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="option_parse_8h_1a9c0e386a8b56ce160fedfc90034b93af" kindref="member">outOfRangeErrorHandling</ref>(std::string<sp/>opt,<sp/>std::string<sp/>range,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*insrtvl);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="option_parse_8h_1aaaac65a9c94bb3634948df7d2d9e1164" kindref="member">conversionErrorHandling</ref>(std::string<sp/>opt,<sp/>std::string<sp/>range,<sp/>std::invalid_argument<sp/>err);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="option_parse_8h_1acd083c726f0de0e35447b9d4176abc76" kindref="member">unknownErrorHandling</ref>();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="option_parse_8h_1aca42904c9676201145e82289b4b97f47" kindref="member">ProcessArgs</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;dr,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;fr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;pmr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;pMr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;ymr,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>&amp;yMr,<sp/>std::string<sp/>&amp;nfr,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;vr);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/include/optionParse.h"/>
  </compounddef>
</doxygen>
