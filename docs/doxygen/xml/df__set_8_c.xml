<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.5" xml:lang="en-US">
  <compounddef id="df__set_8_c" kind="file" language="C++">
    <compoundname>df_set.C</compoundname>
    <includes local="yes">ROOT/RDataFrame.hxx</includes>
    <includes local="yes">ROOT/RVec.hxx</includes>
    <includes local="yes">Math/Vector4Dfwd.h</includes>
    <includes local="yes">Math/Vector4D.h</includes>
    <includes local="yes">TMath.h</includes>
    <includes local="yes">TFile.h</includes>
    <includes local="no">TSystem.h</includes>
    <includes refid="df__set_8h" local="yes">df_set.h</includes>
    <includes local="no">filesystem</includes>
    <includes refid="option_parse_8h" local="yes">optionParse.h</includes>
    <incdepgraph>
      <node id="9">
        <label>df_set.h</label>
        <link refid="df__set_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>optionParse.h</label>
        <link refid="option_parse_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C</label>
        <link refid="df__set_8_c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>Math/Vector4D.h</label>
      </node>
      <node id="4">
        <label>Math/Vector4Dfwd.h</label>
      </node>
      <node id="2">
        <label>ROOT/RDataFrame.hxx</label>
      </node>
      <node id="3">
        <label>ROOT/RVec.hxx</label>
      </node>
      <node id="7">
        <label>TFile.h</label>
      </node>
      <node id="6">
        <label>TMath.h</label>
      </node>
      <node id="8">
        <label>TSystem.h</label>
      </node>
      <node id="10">
        <label>filesystem</label>
      </node>
      <node id="13">
        <label>getopt.h</label>
      </node>
      <node id="12">
        <label>iostream</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="df__set_8_c_1a2827f39a40e4b4fae93e112b77caabd7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ROOT::Math::PtEtaPhiMVector</type>
        <definition>ROOT::Math::PtEtaPhiMVector computeFourVec</definition>
        <argsstring>(RVec&lt; float &gt; &amp;pt, RVec&lt; float &gt; &amp;eta, RVec&lt; float &gt; &amp;phi, RVec&lt; float &gt; &amp;mass)</argsstring>
        <name>computeFourVec</name>
        <param>
          <type>RVec&lt; float &gt; &amp;</type>
          <declname>pt</declname>
        </param>
        <param>
          <type>RVec&lt; float &gt; &amp;</type>
          <declname>eta</declname>
        </param>
        <param>
          <type>RVec&lt; float &gt; &amp;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>RVec&lt; float &gt; &amp;</type>
          <declname>mass</declname>
        </param>
        <briefdescription>
<para>it calculates the four vector of a dimuon starting from pt, eta, phi and mass of muon pair </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pt</parametername>
</parameternamelist>
<parameterdescription>
<para>transverse momentum </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eta</parametername>
</parameternamelist>
<parameterdescription>
<para>azimuthal angle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>phi</parametername>
</parameternamelist>
<parameterdescription>
<para>angle </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mass</parametername>
</parameternamelist>
<parameterdescription>
<para>mass</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>PtEtaPhiMVector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" line="47" column="29" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="df__set_8_c_1a43136d27aec318f3aed40fb8bf91d419" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float computeFourVecInvariantMass</definition>
        <argsstring>(ROOT::Math::PtEtaPhiMVector &amp;fourvec)</argsstring>
        <name>computeFourVecInvariantMass</name>
        <param>
          <type>ROOT::Math::PtEtaPhiMVector &amp;</type>
          <declname>fourvec</declname>
        </param>
        <briefdescription>
<para>it calculates the invariant mass of a dimuon Four Vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvec</parametername>
</parameternamelist>
<parameterdescription>
<para>four vector of dimuon pair</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>mass </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" line="62" column="7" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="df__set_8_c_1af52c5f7a0059aeb7705901bb4f997a84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float computeFourVecPT</definition>
        <argsstring>(ROOT::Math::PtEtaPhiMVector &amp;fourvec)</argsstring>
        <name>computeFourVecPT</name>
        <param>
          <type>ROOT::Math::PtEtaPhiMVector &amp;</type>
          <declname>fourvec</declname>
        </param>
        <briefdescription>
<para>it calculates the transverse momentum of a dimuon Four Vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvec</parametername>
</parameternamelist>
<parameterdescription>
<para>four vector of dimuon pair</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>pt (transverse momentum) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" line="75" column="7" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" bodystart="75" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="df__set_8_c_1a843d5848125590711f1322a95913618e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float computeFourVecRapidity</definition>
        <argsstring>(ROOT::Math::PtEtaPhiMVector &amp;fourvec)</argsstring>
        <name>computeFourVecRapidity</name>
        <param>
          <type>ROOT::Math::PtEtaPhiMVector &amp;</type>
          <declname>fourvec</declname>
        </param>
        <briefdescription>
<para>it calculates the rapidity of a dimuon Four Vector //inserire formula rapidit√† </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvec</parametername>
</parameternamelist>
<parameterdescription>
<para>four vector of dimuon pair</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>rapidity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" line="88" column="7" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="df__set_8_c_1a4df46765a50745c9d281e1d5b59b9bbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float computeFourVecBeta</definition>
        <argsstring>(ROOT::Math::PtEtaPhiMVector &amp;fourvec)</argsstring>
        <name>computeFourVecBeta</name>
        <param>
          <type>ROOT::Math::PtEtaPhiMVector &amp;</type>
          <declname>fourvec</declname>
        </param>
        <briefdescription>
<para>it calculates beta (p_t/E) of a dimuon Four Vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fourvec</parametername>
</parameternamelist>
<parameterdescription>
<para>four vector of dimuon pair</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>beta </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" line="101" column="7" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="df__set_8_c_1ad8de3c0c9c809d0cdc00ba1bcfe996e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ROOT::RDataFrame</type>
        <definition>ROOT::RDataFrame df_set</definition>
        <argsstring>()</argsstring>
        <name>df_set</name>
        <briefdescription>
<para>it defines the dataframe used in the analysis or it creates it if it is not found </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Dataframe </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para>try opening file</para>
<para>if data directory does not exists</para>
<para>throw an exception to handle</para>
<para>handle exception of not found directory</para>
<para>try opening file</para>
<para>if filesystem cannot access pathname</para>
<para>throw exception to handle</para>
<para>hadles exception of not found file</para>
<para>reading dataframe from online NanoAOD</para>
<para>define more useful variables in the dataframe</para>
<para>save dataframe in a root file to avoid downloading it all the times</para>
<para>read dataframe from file stored</para>
<para>this last step is necessary in order to be coherent with return type of the function <ref refid="df__set_8_c_1ad8de3c0c9c809d0cdc00ba1bcfe996e4" kindref="member">df_set()</ref></para>
<para>if it happens anything that is not caught</para>
<para>function defined in <ref refid="option_parse_8_c" kindref="compound">optionParse.C</ref></para>
        </inbodydescription>
        <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" line="113" column="18" bodyfile="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C" bodystart="113" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Function for creating and setting up dataframe used in the analysis. </para>
    </briefdescription>
    <detaileddescription>
<para>In this file are defined the functions used in order to read the dataframe (or create it if it is not already there) and setting it up with useful variables In particular, it is defined:</para>
<para>computeFourVector(): computes a four vector of a dimuon starting from pt, eta, phi and mass</para>
<para><ref refid="df__set_8_c_1a43136d27aec318f3aed40fb8bf91d419" kindref="member">computeFourVecInvariantMass()</ref>: computes invariant mass of given four vector</para>
<para><ref refid="df__set_8_c_1af52c5f7a0059aeb7705901bb4f997a84" kindref="member">computeFourVecPT()</ref>: computes pt of given FourVector</para>
<para><ref refid="df__set_8_c_1a843d5848125590711f1322a95913618e" kindref="member">computeFourVecRapidity()</ref>: computes rapidity of given four vector</para>
<para><ref refid="df__set_8_c_1a4df46765a50745c9d281e1d5b59b9bbd" kindref="member">computeFourVecBeta()</ref>: computes beta of given four vector</para>
<para><ref refid="df__set_8_c_1ad8de3c0c9c809d0cdc00ba1bcfe996e4" kindref="member">df_set()</ref>: defines the dataframe </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ROOT/RDataFrame.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ROOT/RVec.hxx&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//per<sp/>usare<sp/>ROOT::VecOps::RVec&lt;T&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Math/Vector4Dfwd.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Math/Vector4D.h&quot;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//per<sp/>usare<sp/>PtEtaPhiMVector<sp/>e<sp/>le<sp/>sue<sp/>funzioni</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TMath.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;TFile.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;TSystem.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="df__set_8h" kindref="compound">df_set.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;filesystem&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="option_parse_8h" kindref="compound">optionParse.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">ROOT::VecOps;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">ROOT::Math::PtEtaPhiMVector<sp/><ref refid="df__set_8_c_1a2827f39a40e4b4fae93e112b77caabd7" kindref="member">computeFourVec</ref>(RVec&lt;float&gt;<sp/>&amp;pt,<sp/>RVec&lt;float&gt;<sp/>&amp;eta,<sp/>RVec&lt;float&gt;<sp/>&amp;phi,<sp/>RVec&lt;float&gt;<sp/>&amp;mass)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>ROOT::Math::PtEtaPhiMVector<sp/>m1(pt[0],<sp/>eta[0],<sp/>phi[0],<sp/>mass[0]);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>ROOT::Math::PtEtaPhiMVector<sp/>m2(pt[1],<sp/>eta[1],<sp/>phi[1],<sp/>mass[1]);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(m1<sp/>+<sp/>m2);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df__set_8_c_1a43136d27aec318f3aed40fb8bf91d419" kindref="member">computeFourVecInvariantMass</ref>(ROOT::Math::PtEtaPhiMVector<sp/>&amp;fourvec)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fourvec.mass();</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df__set_8_c_1af52c5f7a0059aeb7705901bb4f997a84" kindref="member">computeFourVecPT</ref>(ROOT::Math::PtEtaPhiMVector<sp/>&amp;fourvec)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fourvec.pt();</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df__set_8_c_1a843d5848125590711f1322a95913618e" kindref="member">computeFourVecRapidity</ref>(ROOT::Math::PtEtaPhiMVector<sp/>&amp;fourvec)</highlight></codeline>
<codeline lineno="89"><highlight class="normal">{</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fourvec.Rapidity();</highlight></codeline>
<codeline lineno="91"><highlight class="normal">}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><ref refid="df__set_8_c_1a4df46765a50745c9d281e1d5b59b9bbd" kindref="member">computeFourVecBeta</ref>(ROOT::Math::PtEtaPhiMVector<sp/>&amp;fourvec)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fourvec.Beta();</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal">ROOT::RDataFrame<sp/><ref refid="df__set_8_c_1ad8de3c0c9c809d0cdc00ba1bcfe996e4" kindref="member">df_set</ref>()</highlight></codeline>
<codeline lineno="114"><highlight class="normal">{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Enable<sp/>multi-threading</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>ROOT::EnableImplicitMT(1);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">fs<sp/>=<sp/>std::filesystem;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>std::string<sp/>fname(</highlight><highlight class="stringliteral">&quot;./Data/data.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>ROOT::RDataFrame<sp/>*df;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ROOT::RDataFrame(</highlight><highlight class="stringliteral">&quot;Events&quot;</highlight><highlight class="normal">,<sp/>fname);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fs::is_directory(</highlight><highlight class="stringliteral">&quot;./Data&quot;</highlight><highlight class="normal">)<sp/>||<sp/>!fs::exists(</highlight><highlight class="stringliteral">&quot;./Data&quot;</highlight><highlight class="normal">))<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;./Data&quot;</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pathToData)<sp/></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Directory<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pathToData<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>does<sp/>not<sp/>exist.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>directory...\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>fs::create_directory(pathToData);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Directory<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>pathToData<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>successfully<sp/>created\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>df<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>ROOT::RDataFrame(</highlight><highlight class="stringliteral">&quot;Events&quot;</highlight><highlight class="normal">,<sp/>fname);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(gSystem-&gt;AccessPathName(fname.c_str()))<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(std::runtime_error(</highlight><highlight class="stringliteral">&quot;Problem<sp/>reading<sp/>data<sp/>file<sp/>(it<sp/>might<sp/>not<sp/>exist<sp/>or<sp/>might<sp/>be<sp/>corrupted)\n&quot;</highlight><highlight class="normal">));<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(std::exception<sp/>&amp;ex)<sp/></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/>ex.what()<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Recovering<sp/>dataset<sp/>from<sp/>web...\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/>ROOT::RDataFrame<sp/>df_temp(</highlight><highlight class="stringliteral">&quot;Events&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;root://eospublic.cern.ch//eos/opendata/cms/derived-data/AOD2NanoAODOutreachTool/Run2012BC_DoubleMuParked_Muons.root&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/><ref refid="df__set_8_c_1ad8de3c0c9c809d0cdc00ba1bcfe996e4" kindref="member">df_set</ref><sp/>=<sp/>df_temp.Define(</highlight><highlight class="stringliteral">&quot;Dimuon_FourVec&quot;</highlight><highlight class="normal">,<sp/><ref refid="df__set_8_c_1a2827f39a40e4b4fae93e112b77caabd7" kindref="member">computeFourVec</ref>,<sp/>{</highlight><highlight class="stringliteral">&quot;Muon_pt&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Muon_eta&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Muon_phi&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Muon_mass&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Define(</highlight><highlight class="stringliteral">&quot;Dimuon_mass&quot;</highlight><highlight class="normal">,<sp/><ref refid="df__set_8_c_1a43136d27aec318f3aed40fb8bf91d419" kindref="member">computeFourVecInvariantMass</ref>,<sp/>{</highlight><highlight class="stringliteral">&quot;Dimuon_FourVec&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Define(</highlight><highlight class="stringliteral">&quot;Dimuon_pt&quot;</highlight><highlight class="normal">,<sp/><ref refid="df__set_8_c_1af52c5f7a0059aeb7705901bb4f997a84" kindref="member">computeFourVecPT</ref>,<sp/>{</highlight><highlight class="stringliteral">&quot;Dimuon_FourVec&quot;</highlight><highlight class="normal">})<sp/></highlight><highlight class="comment">//<sp/>Compute<sp/>pt<sp/>and<sp/>rapidity<sp/>(y)<sp/>of<sp/>dimuon</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Define(</highlight><highlight class="stringliteral">&quot;Dimuon_beta&quot;</highlight><highlight class="normal">,<sp/><ref refid="df__set_8_c_1a4df46765a50745c9d281e1d5b59b9bbd" kindref="member">computeFourVecBeta</ref>,<sp/>{</highlight><highlight class="stringliteral">&quot;Dimuon_FourVec&quot;</highlight><highlight class="normal">})</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.Define(</highlight><highlight class="stringliteral">&quot;Dimuon_y&quot;</highlight><highlight class="normal">,<sp/><ref refid="df__set_8_c_1a843d5848125590711f1322a95913618e" kindref="member">computeFourVecRapidity</ref>,<sp/>{</highlight><highlight class="stringliteral">&quot;Dimuon_FourVec&quot;</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="df__set_8_c_1ad8de3c0c9c809d0cdc00ba1bcfe996e4" kindref="member">df_set</ref>.Snapshot(</highlight><highlight class="stringliteral">&quot;Events&quot;</highlight><highlight class="normal">,<sp/>fname);<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>ROOT::RDataFrame<sp/>df_new(</highlight><highlight class="stringliteral">&quot;Events&quot;</highlight><highlight class="normal">,<sp/>fname);<sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>df_new;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(...)<sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="option_parse_8h_1acd083c726f0de0e35447b9d4176abc76" kindref="member">unknownErrorHandling</ref>();<sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*df);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/zenith378/Documents/Uni/Computing/Y-DiMuonResonances/YFit/src/df_set.C"/>
  </compounddef>
</doxygen>
